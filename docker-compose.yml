services:

  db:
    image: mysql:8
    container_name: database
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - network
    ports:
      - "5444:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123456789
      - MYSQL_DATABASE=challenge_database
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 3s

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: backend
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/opt/app
      - /opt/app/.venv
    networks:
      - network
    environment:
      - PYTHONUNBUFFERED=1

  alembic:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: alembic
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/opt/app
      - /opt/app/.venv
    networks:
      - network
    environment:
      - PYTHONUNBUFFERED=1
    entrypoint: ["alembic", "-c", "/opt/app/app/persistence/sqlalchemy/alembic.ini"]

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: test
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/opt/app
      - /opt/app/.venv
    networks:
      - network
    environment:
      - PYTHONUNBUFFERED=1
      - TESTING=True
      - ENVIRONMENT=${ENVIRONMENT}
      - TEST_DATABASE_URL=${TEST_DATABASE_URL}
    command: pytest -qx

volumes:
  app:
  mysql_data:

networks:
  network:
    driver: bridge
